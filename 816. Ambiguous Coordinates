//O(n^3) time and space
class Solution {
    
    public List<String> ambiguousCoordinates(String S) {
        List<String> result = new ArrayList();
        if(S==null || S.length()==0) return result;
        int n = S.length();
        for(int i=1;i<n-2;i++) {
            List<String> left = helper(S.substring(1,i+1));
            List<String> right = helper(S.substring(i+1, n-1));
            for(String l:left) {
                for(String r:right) {
                    result.add("("+l+", "+r+")");
                }
            }
        }
        return result;
    }
    
    public List<String> helper(String s) {
        List<String> result = new ArrayList();
        int n = s.length();
        if(n==0 || (n>1 && s.charAt(0)=='0' && s.charAt(n-1)=='0')) return result;
        if(s.charAt(0)=='0') {
            if(n==1)
                result.add(s);
            else
                result.add("0."+s.substring(1));
            return result;
        }
        if(s.charAt(n-1)=='0') {
            result.add(s);
            return result;
        }
        result.add(s);
        for(int i=1;i<n;i++) {
            result.add(s.substring(0,i)+"."+s.substring(i));
        }
        return result;
    }
    
}
