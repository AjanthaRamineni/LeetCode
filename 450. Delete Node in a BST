//O(n) time and space
class Solution {
    
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null) return root;
        else if (key<root.val) {
            root.left = deleteNode(root.left, key);
        } else if (key>root.val) {
            root.right = deleteNode(root.right, key);
        } else {
            if(root.left==null) {
                return root.right;
            }
            if(root.right==null) {
                return root.left;
            }
            TreeNode leftMax = leftMax(root.left);
            root.val = leftMax.val;
            root.left = deleteNode(root.left, leftMax.val);
        }
        return root;
    }
    
    public TreeNode leftMax(TreeNode node) {
        while(node.right!=null){
            node=node.right;
        }
        return node;
    }
    
}
