//O(n) time and O(n) Solution
class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        TreeNode cur = root;
        TreeNode prev = null;
        while(cur!=null && cur.val!=key){
            prev = cur;
            if(cur.val>key){
                cur = cur.left;
            }
            else{
                cur = cur.right;
            }
        }
        if(prev==null) return helper(root);
        else{
            if(prev.left == cur)
                prev.left = helper(cur);
            else if(prev.right==cur)
                prev.right = helper(cur);
        }
        return root;
    }
     private TreeNode helper(TreeNode root) {
        if (root == null) {
            return null;
        }
        if (root.left == null) {
            return root.right;
        }
        if (root.right == null) {
            return root.left;
        }
        TreeNode next = root.right;
        TreeNode pre = null;
        for(; next.left != null; pre = next, next = next.left);
        next.left = root.left;
        if(root.right != next) {
            pre.left = next.right;
            next.right = root.right;
        }
        return next;
    }
}
