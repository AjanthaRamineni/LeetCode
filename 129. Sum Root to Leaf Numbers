//O(n2) time and space complexity
class Solution {
    public int sumNumbers(TreeNode root) {
        if(root==null) return 0;
        List<String> list = new ArrayList();
        backtrack(list, "", root);
        int result = 0;
        for(String l:list){
            result+=Integer.parseInt(l);
        } 
        return result;
    }
    
    public void backtrack(List<String> list, String s, TreeNode root){
        if(root==null) return;
        if((root.left==null)&&(root.right==null)){
            s+=root.val;
            list.add(s);
            return;
        }
        else{
            s+=root.val;
            backtrack(list, s, root.left);
            backtrack(list, s, root.right);
        }
    }
    
}
