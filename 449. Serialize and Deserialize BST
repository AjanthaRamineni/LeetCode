public class Codec {
    public String serialize(TreeNode root) {
        if(root==null) return "";
        Queue<TreeNode> q = new LinkedList();
        StringBuffer sb = new StringBuffer();
        q.offer(root);
        while(!q.isEmpty()){
            TreeNode temp = q.poll();
            if(temp==null) { sb.append("null,"); continue; }
            sb.append(temp.val+",");
            q.offer(temp.left);
            q.offer(temp.right);
            
        }
        return sb.toString();
    }
    public TreeNode deserialize(String data) {
        if(data=="") return null;
        Queue<TreeNode> q = new LinkedList();
        String[] leaves = data.split(",");
        TreeNode root = new TreeNode(Integer.parseInt(leaves[0]));
        q.offer(root);
        for(int i=1;i<leaves.length;i++){
            TreeNode parent = q.poll();
            if(!leaves[i].equals("null")){
                TreeNode left = new TreeNode(Integer.parseInt(leaves[i]));
                parent.left = left;
                q.offer(left);
            }
            if(!leaves[++i].equals("null")){
                TreeNode right = new TreeNode(Integer.parseInt(leaves[i]));
                parent.right = right;
                q.offer(right);
            }            
        }
        return root;
    }
}
