//O(n) time and space
class Solution {
    public String removeDuplicateLetters(String s) {
        //Sanity check
        if(s==null || s.length()==0) return "";
        boolean[] visited = new boolean[26];
        Stack<Character> stack = new Stack();
        int[] map = new int[26];
        for(char c:s.toCharArray()){
            map[c-'a']++;
        }
        for(char c:s.toCharArray()){
            map[c-'a']--;
            if(visited[c-'a']) continue;
            while(!stack.isEmpty() && c<stack.peek() && map[stack.peek()-'a']!=0){
                visited[stack.pop()-'a'] = false;
            }
            stack.push(c);
            visited[c-'a'] = true;
        }
        String result = "";
        while(!stack.isEmpty()){
            result = stack.pop() + result;
        }
        return result;
    }
}
