//O(n) time and space
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> list = new ArrayList();
        if(root==null) return list;
        Queue<Node> queue = new LinkedList();
        queue.offer(root);
        while(!queue.isEmpty()){
            int level = queue.size();
            List<Integer> sublist = new ArrayList();
            for(int i=0;i<level;i++){
                Node temp = queue.poll();
                sublist.add(temp.val);
                for(Node child:temp.children){
                    if(child==null) continue;
                    queue.offer(child);
                }
            }
            list.add(sublist);
        }
        return list;
    }
}
