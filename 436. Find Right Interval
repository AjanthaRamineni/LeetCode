//O(nlogn) time and O(n) space
class Solution {
    public int[] findRightInterval(Interval[] intervals) {
        if(intervals==null || intervals.length==0) return new int[0];
        int n = intervals.length;
        int[] result = new int[n];
        //Mapping between interval start point and the index
        TreeMap<Integer, Integer> map = new TreeMap();
        for (int i = 0; i < intervals.length; i++) {
            map.put(intervals[i].start, i);
        }
        for (int i = 0; i < intervals.length; i++) {
            if(map.ceilingKey(intervals[i].end)==null){
                result[i] = -1;
            }
            else{
                Integer key = map.ceilingKey(intervals[i].end);
                result[i] = map.get(key);
            }
        }
        return result;
    }
}
