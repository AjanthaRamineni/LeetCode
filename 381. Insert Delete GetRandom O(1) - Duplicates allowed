class RandomizedCollection {

    Map<Integer, LinkedHashSet<Integer>> map;
    List<Integer> list;
    Random rand;
    public RandomizedCollection() {
        map = new HashMap();
        list = new ArrayList();
        rand = new Random();
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public boolean insert(int val) {
        boolean ret = map.containsKey(val);
        map.putIfAbsent(val, new LinkedHashSet());
        map.get(val).add(list.size());
        list.add(val);
        return !ret;
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public boolean remove(int val) {
        if(!map.containsKey(val)) return false;
        int index = map.get(val).iterator().next();
        map.get(val).remove(index);
        if(index!=list.size()-1) {
            int lastVal = list.get(list.size()-1);
            list.set(index, lastVal);
            map.get(lastVal).remove(list.size()-1);
            map.get(lastVal).add(index);
        }
        list.remove(list.size()-1);
        if(map.get(val).size()==0) map.remove(val);
        return true;
    }
    
    /** Get a random element from the collection. */
    public int getRandom() {
        return list.get(rand.nextInt(list.size()));
    }
}
