class ExamRoom {

    TreeSet<Integer> set;
    int N;
    public ExamRoom(int N) {
        set = new TreeSet();
        this.N = N;
    }
    
    //O(n) time and O(1) space
    public int seat() {
        int maxIndex = 0;
        if(set.size()>0) {
            Integer prev = null;
            int maxDistance = set.first();
            for(Integer cur:set) {
                if(prev!=null) {
                    int distance = (cur - prev)/2;
                    if(maxDistance < distance) {
                        maxDistance = distance;
                        maxIndex = prev + maxDistance;
                    }
                }
                prev = cur;
            }
            if(N-1-prev > maxDistance) {
                maxIndex = N-1;
            }
        }
        set.add(maxIndex);
        return maxIndex;
    }
    
    //O(logn) time and O(1) space
    public void leave(int p) {
        set.remove(p);
    }
}
