//O(n) time and O(1) space
class Solution {
    public String[] findWords(String[] words) {
        String s1 = "qwertyuiopQWERTYUIOP";
        String s2 = "asdfghjklASDFGHJKL";
        String s3 = "zxcvbnmZXCVBNM";
        Set<Character> set1 = new HashSet();
        for(char c:s1.toCharArray()) set1.add(c);
        Set<Character> set2 = new HashSet();
        for(char c:s2.toCharArray()) set2.add(c);
        Set<Character> set3 = new HashSet();
        for(char c:s3.toCharArray()) set3.add(c);
        List<String> list = new ArrayList();
        for(String word:words){
            int c1 = 0, c2 = 0, c3 = 0;
            for(char c:word.toCharArray()){
                if(set1.contains(c)) c1++;
                else if(set2.contains(c)) c2++;
                else c3++;
            }
            int n = word.length();
            if(c1==n || c2==n || c3==n) list.add(word);
        }
        return array(list);
    }
    
    public String[] array(List<String> list) {
        String[] result = new String[list.size()];
        for(int i=0;i<result.length;i++){
            result[i] = list.get(i);
        }
        return result;
    }
    
}
