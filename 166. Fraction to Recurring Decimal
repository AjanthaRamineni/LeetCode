//O(denominator) time and space
class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        if(numerator==0) return "0";
        Map<Long, Integer> map = new HashMap();
        StringBuffer sb = new StringBuffer();
        if(((numerator>0)&&(denominator<0))||((numerator<0)&&(denominator>0)))
            sb.append("-");
        long dividend = Math.abs(Long.valueOf(numerator));
        long divisor = Math.abs(Long.valueOf(denominator));
        sb.append(String.valueOf(dividend / divisor));
        long remainder = dividend % divisor;
        if (remainder == 0) {
            return sb.toString();
        }
        sb.append(".");
        while(remainder!=0) {
            if (map.containsKey(remainder)) {
                sb.insertCharAt(map.get(remainder), "(");
                sb.append(")");
                break;
            }
            map.put(remainder, sb.length());
            remainder*=10;
            sb.append(String.valueOf(remainder/divisor));
            remainder%=divisor;
        }
        return sb.toString();
    }
}
