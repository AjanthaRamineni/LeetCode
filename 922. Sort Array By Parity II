//O(n) time and O(1) space
class Solution {
    public int[] sortArrayByParityII(int[] A) {
        int n = A.length;
        int evenIndex = 0, oddIndex = 1;
        while(evenIndex<n && oddIndex<n){
            while(evenIndex<n && A[evenIndex]%2==0){
                evenIndex+=2;
            }
            while(oddIndex<n && A[oddIndex]%2!=0){
                oddIndex+=2;
            }
            if(oddIndex<n && evenIndex<n){
                swap(A,evenIndex,oddIndex);
            }
        }
        return A;
    }
    public void swap(int[] A, int i, int j){
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
}
