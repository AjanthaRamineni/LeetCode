//O(n) and O(1)
class Solution {
    public int trap(int[] height) {
        if(height==null || height.length==0) return 0;
        int n = height.length;
        int left = 0, right = n-1;
        int leftmax = 0, rightmax = 0;
        int max = 0;
        while(left<=right){
            if(height[left]<height[right]){
                if(height[left]>leftmax){
                    leftmax = height[left];
                }
                else{
                    max+=(leftmax-height[left]);
                }
                left++;
            }
            else{
                if(height[right]>rightmax){
                    rightmax = height[right];
                }
                else{
                    max+=(rightmax-height[right]);
                }
                right--;
            }
        }
        return max;
    }
}
