//O(n) time and O(1) space
class Solution {
    public int maxProfit(int[] prices) { 
        if (prices == null || prices.length < 2)
             return 0;
        int minCost1 = Integer.MAX_VALUE, minCost2 = Integer.MAX_VALUE, maxProfit1 = 0, maxProfit2 = 0;

        for (int price : prices){
            minCost1 = Math.min(minCost1, price);
            maxProfit1 = Math.max(maxProfit1, price - minCost1);
            minCost2 = Math.min(minCost2, price - maxProfit1);
            maxProfit2 = Math.max(maxProfit2, price - minCost2);
        }
        return maxProfit2;
    }
}
