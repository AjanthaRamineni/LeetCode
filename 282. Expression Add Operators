//O(3^n) time and space
class Solution {
    
    public List<String> addOperators(String num, int target) {
        List<String> result = new ArrayList();
        helper(result, "", num, target, 0, 0, 0);
        return result;
    }
    
    public void helper(List<String> result, String s, String num, int target, int index, long eval, long multed) {
        if(index==num.length()) {
            if(eval==target) {
                result.add(s);
            }
            return;
        }
        for(int i=index;i<num.length();i++) {
            if(i!=index && num.charAt(index)=='0') break;
            Long cur = Long.valueOf(num.substring(index,i+1));
            if(index==0) {
                helper(result, s+""+cur, num, target, i+1, eval+cur, cur);
            }
            else {
                helper(result, s+"+"+cur, num, target, i+1, eval+cur, cur);
                helper(result, s+"-"+cur, num, target, i+1, eval-cur, -cur);
                helper(result, s+"*"+cur, num, target, i+1, eval-multed+cur*multed, cur*multed);
            }
        }
    }
    
}
