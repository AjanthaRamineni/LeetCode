//O(n) time and space
class Solution {
    public String predictPartyVictory(String senate) {
        Queue<Integer> rq = new LinkedList();
        Queue<Integer> dq = new LinkedList();
        int index = 0;
        for(char c:senate.toCharArray()){
            if(c=='R') rq.offer(index++);
            else dq.offer(index++);
        }
        while(!rq.isEmpty() && !dq.isEmpty()){
            int r = rq.poll(), d = dq.poll();
            if(r<d) {
                rq.offer(r+senate.length());
            } else {
                dq.offer(d+senate.length());
            }
        }
        return dq.isEmpty() ? "Radiant" : "Dire";
    }
}
