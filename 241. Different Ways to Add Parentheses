//O(3^n) time and space 
class Solution {
    Map<String, List<Integer>> map = new HashMap();
    public List<Integer> diffWaysToCompute(String input) {
        if(map.containsKey(input)) return map.get(input);
        List<Integer> result = new ArrayList();
        for(int i=0;i<input.length();i++){
            char c = input.charAt(i);
            if((c=='+')||(c=='-')||(c=='*')){
                String l = input.substring(0,i);
                String r = input.substring(i+1);
                List<Integer> left = map.containsKey(l)?map.get(l):diffWaysToCompute(l);
                List<Integer> right = map.containsKey(r)?map.get(r):diffWaysToCompute(r);
                for(Integer il:left){
                    for(Integer ir:right){
                        int res = 0;
                        if(c=='+'){
                            res = il+ir;
                        }
                        else if(c=='-'){
                            res = il-ir;
                        }
                        else if(c=='*'){
                            res = il*ir;
                        }
                        result.add(res);
                    }
                }
            }
        }
        if(result.size()==0){
            result.add(Integer.parseInt(input));
        }
        map.put(input, result);
        return result;
    }
}
