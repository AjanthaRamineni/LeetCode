//O(nt) time and O(t) space
class Solution {
    public int combinationSum4(int[] nums, int target) {
        if(nums==null || nums.length==0) return 0;
        int n = nums.length;
        int[] dp = new int[target+1];
        dp[0] = 1;
        for(int t=1;t<=target;t++){
            for(int i=0;i<nums.length;i++){
                if(nums[i]<=t){
                    dp[t]+=dp[t- nums[i]];
                }
            }   
        }
        return dp[target];
    }
    
    public int recursive(int[] nums, int target){
        if(target==0) return 1;
        int count = 0;
        for(int i=0;i<nums.length;i++){
            if(target>=nums[i]){
                count+=recursive(nums,target-nums[i]);
            }
        }
        return count;
    }
    
}
