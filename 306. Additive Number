//O(n^3) time and O(n) space
class Solution {
    public boolean isAdditiveNumber(String num) {
        if(num==null || num.length()<3) return false;
        int n = num.length();
        for(int i=1;i<=(n-1)/2;i++){
            //Check for trailing zero
            if(num.charAt(0)=='0' && i>=2) break;
            for(int j=i+1;((n-j>=j-i) && (n-j>=i));j++){
                if(num.charAt(i)=='0' && j-i>=2) break;
                Long num1 = Long.parseLong(num.substring(0,i));
                Long num2 = Long.parseLong(num.substring(i,j));
                String s = num.substring(j);
                if(valid(s,num1,num2)) return true;
            }
        }
        return false;
    }
    
    //Recursively check if num1+num2==s
    public boolean valid(String s, Long num1, Long num2) {
        if(s==null || s.length()==0) return true;
        Long sum = num1+num2;
        String sumString = String.valueOf(sum);
        if(!s.startsWith(sumString)) return false;
        return valid(s.substring(sumString.length()), num2, sum);
    }
}
