public class Solution {
    //O(mn) time and O(m) space
    public int minTotalDistance(int[][] grid) {
        if((grid==null)||(grid.length==0)) return 0;
        int m = grid.length, n = grid[0].length;
        List<Integer> rows = new ArrayList();
        List<Integer> cols = new ArrayList();
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(grid[i][j]==1) {
                    rows.add(i);
                    cols.add(j);
                }
            }
        }
        Collections.sort(rows);
        Collections.sort(cols);
        int sum = 0;
        int rm = rows.get((rows.size())/2);
        int cm = cols.get((cols.size())/2);
        for(int r:rows) {
            sum+=Math.abs(r-rm);
        }
        for(int c:cols) {
            sum+=Math.abs(c-cm);
        }
        return sum;
    }
}
