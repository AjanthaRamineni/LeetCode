//O(n) and O(1)
class Solution {
    public ListNode plusOne(ListNode head) {
        ListNode rev = reverse(head);
        ListNode iter = rev;
        int count = 0;
        while(iter!=null){
            count++;
            if(iter.val==9){
                iter.val = 0;
                iter = iter.next;
            }
            else{
                iter.val = iter.val+1;
                return reverse(rev);
            }
        }
        ListNode one = new ListNode(1);
        ListNode result = one;
        while(count-->0){
            one.next = new ListNode(0);
            one = one.next;
        }
        return result;
    }
    //O(n) and O(1)
    public ListNode reverse(ListNode head){
        if(head==null || head.next==null) return head;
        ListNode cur = head,prev=null;
        while(cur!=null){
            ListNode next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }
}
