/*

Implement an iterator to flatten a 2d vector.

For example, Given 2d vector =
[
[1,2],
[3],
[4,5,6]
]

By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1, 2, 3, 4, 5, 6].

*/

public class Vector2D implements Iterator<Integer> {

    Iterator<List<Integer>> listIter;
    Iterator<Integer> iter;
    public Vector2D(List<List<Integer>> vec2d) {
        listIter = vec2d.iterator();
        iter = Collections.emptyIterator();
    }

    //O(1) time
    public Integer next() {
        return iter.next();
    }

    //O(1) time
    public boolean hasNext() {
        if(iter.hasNext()) return true;
        if(!listIter.hasNext()) return false;
        iter = listIter.next().iterator();
        while(!iter.hasNext() && listIter.hasNext()) {
            iter = listIter.next().iterator();
        }
        return iter.hasNext();
    }
}

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i = new Vector2D(vec2d);
 * while (i.hasNext()) v[f()] = i.next();
 */
