//O(max(m,n)) time and O(1) space
class Solution {
    public boolean validWordAbbreviation(String word, String abbr) {
        int i = 0, j = 0;
        int m = word.length(), n = abbr.length();
        while(i<m && j<n){
            char a = word.charAt(i);
            char b = abbr.charAt(j);
            if(a==b){
                i++;
                j++;
                continue;
            }
            if(b<='0' || b>'9') return false;
            //If we reach here, this means b is a digit
            //So just find the num and skip the word pointer by that many times
            int start = j;
            while(j<n && Character.isDigit(abbr.charAt(j))){
                j++;
            }
            int sum = Integer.parseInt(abbr.substring(start,j));
            i+=sum;
        }
        return ((i==m)&&(j==n));
    }
}
