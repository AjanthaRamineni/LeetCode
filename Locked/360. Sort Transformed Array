//O(n) time and O(1) space
class Solution {
    public int[] sortTransformedArray(int[] nums, int a, int b, int c) {
        int n = nums.length;
        int[] result = new int[n];
        int low = 0, high = n-1;
        int index = (a>=0)?high:low;
        while(low<=high){
            int l = quad(nums[low], a, b, c);
            int h = quad(nums[high], a, b, c);
            if(a>=0){
                if(l>h){
                    result[index--] = l;
                    low++;
                }
                else{
                    result[index--] = h;
                    high--;
                }
            }
            else{
                if(l<=h){
                    result[index++] = l;
                    low++;
                }
                else{
                    result[index++] = h;
                    high--;
                }
            }
        }
        return result;
    }
    
    public int quad(int x, int a, int b, int c) {
        return a * x * x + b * x + c;
    }
    
}
