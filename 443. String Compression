//O(n) and O(1)
class Solution {
    public int compress(char[] chars) {
        if(chars==null || chars.length==0) return 0;
        int n = chars.length;
        int index = 0;
        char prev = chars[0];
        int count = 1;
        for(int i=1;i<n;i++){
            if(chars[i]==prev){
                count++;
            }
            else{
                chars[index++] = prev;
                if(count>1){
                    String key = String.valueOf(count);
                    char[] ch = key.toCharArray();
                    for(int j=0;j<ch.length;j++){
                        chars[index++] = ch[j];
                    }
                }
                prev = chars[i];
                count = 1;
            }
        }
        chars[index++] = prev;
        if(count>1){
                String key = String.valueOf(count);
                char[] ch = key.toCharArray();
                for(int j=0;j<ch.length;j++){
                chars[index++] = ch[j];
            }
        }
        return index;
    }
}
