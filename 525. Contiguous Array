//O(n) time and space
class Solution {
    public int findMaxLength(int[] nums) {
        if(nums==null || nums.length<2) return 0;
        Map<Integer, Integer> presum = new HashMap();
        presum.put(0,-1);
        int count = 0, max = 0;
        for(int i=0;i<nums.length;i++){
            int num = nums[i];
            count+=(num==1)?1:-1;
            if(!presum.containsKey(count))
                presum.put(count,i);
            else
                max = Math.max(max, i-presum.get(count));
        }
        return max;
    }
}
