//O(nk) time and O(m) space
class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> list = new ArrayList();
        if(s==null || s.length()==0) return list;
        int n = s.length();
        Map<String, Integer> map = new HashMap();
        int m = words.length;
        int k = words[0].length();
        for(String word:words){
            map.put(word, map.getOrDefault(word,0)+1);
        }
        Map<String, Integer> copy = new HashMap(map);
        for(int i=0;i<=(n-m*k);i++){
            map = new HashMap(copy);
            int j = i;
            while(true){
                String key = s.substring(j,j+k);
                if(map.containsKey(key) && map.get(key)>0){
                    map.put(key,map.get(key)-1);
                    if(map.get(key)==0) map.remove(key);
                    if(map.size()==0){
                        list.add(i);
                        map = new HashMap(copy);
                        break;
                    }
                    else{
                        j+=k;
                    }
                }
                else{
                    break;
                }
            }
        }
        return list;
    }
}
