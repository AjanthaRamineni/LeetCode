//O(1) time and space
class Solution {
    public boolean hasAlternatingBits(int n) {
        int leftMostStartBit = lms(n);
        if(leftMostStartBit==-1) return false;
        if(leftMostStartBit==0) return true;
        System.out.println(leftMostStartBit);
        for(int i=leftMostStartBit;i>0;i--){
            int a = (n>>i)&1;
            int b = (n>>(i-1))&1;
            if((a^b)!=1) return false;
        }
        return true;
    }
    public int lms(int n){
        for(int i=31;i>=0;i--){
            if(((n>>i)&1)==1)
                return i;
        }
        return -1;
    }
}
