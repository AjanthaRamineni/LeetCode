//O(mn) time and space
class Solution {
    public void solve(char[][] board) {
        if(board==null || board.length==0) return;
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
		    if (board[i][0] == 'O')
			    helper(board, i, 0,m,n);
		    if (board[i][n-1] == 'O')
			    helper(board, i, n-1,m,n);	
	    }

        for (int j = 0; j < n; j++) {
            if (board[0][j] == 'O')
                helper(board, 0, j,m,n);
            if (board[m-1][j] == 'O')
                helper(board, m-1, j,m,n);	
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='O')
                    board[i][j] = 'X';
                if(board[i][j]=='*')
                    board[i][j]='O';
            }
        }
        
    }
    public void helper(char[][] board, int i, int j, int m, int n){
        if(i<0 || j<0 || i>=m || j>=n) return; 
        if(board[i][j]=='O')
            board[i][j] = '*';
        if (i > 1 && board[i-1][j] == 'O')
		    helper(board, i-1, j, m, n);
	    if (i < board.length - 2 && board[i+1][j] == 'O')
		    helper(board, i+1, j, m, n);
	    if (j > 1 && board[i][j-1] == 'O')
		    helper(board, i, j-1, m, n);
	    if (j < board[i].length - 2 && board[i][j+1] == 'O' )
		    helper(board, i, j+1, m, n);
    }
}
