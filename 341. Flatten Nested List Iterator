
public class NestedIterator implements Iterator<Integer> {
    Stack<NestedInteger> stack;
    public NestedIterator(List<NestedInteger> nestedList) {
        stack = new Stack();
        prepstack(nestedList);
    }

    @Override
    public Integer next() {
        if(!hasNext()) return null;
        return stack.pop().getInteger();
    }

    @Override
    public boolean hasNext() {
        while(!stack.isEmpty() && !stack.peek().isInteger()) {
            prepstack(stack.pop().getList());
        }
        return !stack.isEmpty();
    }
    
    public void prepstack(List<NestedInteger> nestedList) {
        for(int i=nestedList.size()-1;i>=0;i--) {
            stack.push(nestedList.get(i));
        }
    }
}
