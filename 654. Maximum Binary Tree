//O(n2) time and space 
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return helper(nums,0,nums.length-1);
    }
    public TreeNode helper(int[] nums, int low, int high){
        if(low>high) return null;
        int max = low;
        for(int i=low+1;i<=high;i++){
            if(nums[i]>nums[max])
                max = i;
        }
        TreeNode root = new TreeNode(nums[max]);
        root.left = helper(nums,low,max-1);
        root.right = helper(nums,max+1,high);
        return root;
    }
}
