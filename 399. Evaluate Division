//O(q*(v+e)) time and O(v+e) space
class Solution {
    Map<String, Map<String, Double>> adjlist;
    public double[] calcEquation(List<List<String>> equations, double[] values, List<List<String>> queries) {
        construct(equations, values);
        double[] result = new double[queries.size()];
        for(int i=0;i<queries.size();i++) {
            result[i] = dfs(queries.get(i).get(0), queries.get(i).get(1), 1.0, new HashSet());
        }
        return result;
    }
    
    public void construct(List<List<String>> equations, double[] values) {
        adjlist = new HashMap();
        int index = 0;
        for(List<String> equation:equations) {
            String u = equation.get(0), v = equation.get(1);
            double w = values[index++];
            adjlist.putIfAbsent(u, new HashMap());
            adjlist.putIfAbsent(v, new HashMap());
            adjlist.get(u).put(v, w);
            adjlist.get(v).put(u,1/w);
        }
    }
    
    public double dfs(String source, String destination, double result, Set<String> visited) {
        if(visited.contains(source) || !adjlist.containsKey(source)) return -1.0;
        visited.add(source);
        if(source.equals(destination)) return result;
        Map<String, Double> neighborMap = adjlist.get(source);
        for(String neighbor:neighborMap.keySet()) {
            double r = dfs(neighbor, destination, result*neighborMap.get(neighbor), visited);
            if(r!=-1.0) return r;
        }
        return -1.0;
        
    }
    
}
