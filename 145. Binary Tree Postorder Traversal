//O(n) time and space
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList();
        if(root==null) return list;
        TreeNode prev = null;
        Stack<TreeNode> stack = new Stack();
        stack.push(root);
        while(!stack.isEmpty()){
            TreeNode cur = stack.peek();
            if(prev==null || prev.left==cur || prev.right==cur){
                if(cur.left!=null)
                    stack.push(cur.left);
                else if(cur.right!=null)
                    stack.push(cur.right);
            }
            else if(cur.left==prev){
                if(cur.right!=null)
                    stack.push(cur.right);
            }
            else{
                list.add(cur.val);
                stack.pop();
            }
            prev = cur;
        }
        return list;
    }
}
