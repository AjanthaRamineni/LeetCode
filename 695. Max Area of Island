//O(mn) time and O(1) space without modifying the board
class Solution {
    int[][] dirs = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};
    public int maxAreaOfIsland(int[][] grid) {
        if(grid==null || grid.length==0) return 0;
        int m = grid.length, n = grid[0].length;
        int max = 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    max = Math.max(max, dfs(grid,i,j,m,n));
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==2)
                    grid[i][j] = 1;
            }
        }
        return max;
    }
    
    public int dfs(int[][] grid, int i, int j, int m, int n){
        if((i<0) || (j<0) || (i>=m)||(j>=n)||(grid[i][j]!=1)) return 0;
        grid[i][j] = 2;
        int sum = 1;
        for(int[] dir:dirs){
            int x = i+dir[0];
            int y = j+dir[1];
            sum+=dfs(grid,x,y,m,n);
        }
        return sum;
    }
}
