//O(n*(log(sum-max))) time and O(1) space
class Solution {
    public int splitArray(int[] nums, int m) {
        int max = 0;long sum = 0;
        for(int num:nums) { max = Math.max(max, num); sum+=num; };
        long low = (long)max;
        long high = sum;
        while(low<high) {
            long mid = low + (high-low)/2;
            if(!valid(nums, m, mid)) {
                low = mid+1;
            }
            else {
                high = mid;
            }
        }
        return (int)low;
    }
    
    public boolean valid(int[] nums, int m, long mid) {
        int count = 1;
        long sum = 0;
        for(int i=0;i<nums.length;i++) {
            sum+=nums[i];
            if(sum>mid) {
                count++;
                sum = (long)nums[i];
            }
        }
        return (count<=m);
    }
    
}
