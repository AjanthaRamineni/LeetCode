//O(n) time and O(1) space iterative solution
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode evenstart=null,evenend=null;
        ListNode oddstart=null,oddend=null;
        ListNode iter = head;
        int count = 1;
        while(iter!=null){
            if(count%2!=0){
                if(oddstart==null){
                    oddstart = iter;
                    oddend = oddstart;
                }
                else{
                    oddend.next = iter;
                    oddend = oddend.next;
                }
            }
            else{
                if(evenstart==null){
                    evenstart=iter;
                    evenend= evenstart;
                }
                else{
                    evenend.next = iter;
                    evenend = evenend.next;
                }
            }
            iter = iter.next;
            count++;
        }
        oddend.next = evenstart;
        if(evenend!=null) evenend.next = null;
        return oddstart;
    }
}
