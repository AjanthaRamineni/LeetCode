//O(mn) time and O(1) space
class Solution {
    public void gameOfLife(int[][] board) {
        if(board==null || board.length==0) return;
        int m = board.length, n = board[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int count = count(board,i,j,m,n);
                if(board[i][j]==1){
                    if(count==2 || count==3) board[i][j] = 3;
                }
                else{
                    if(count==3) board[i][j] = 2;
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                board[i][j]>>=1;
            }
        }
    }
    
    public int count(int[][] board, int i, int j, int m, int n){
        int count = 0;
        for(int x=-1;x<=1;x++){
            for(int y=-1;y<=1;y++){
                if(x==0 && y==0) continue;
                count+=dfs(board,i+x,j+y,m,n);
            }
        }
        return count;
    }
    
    public int dfs(int[][] board, int i, int j, int m, int n){
        if(i<0 || j<0 || i>=m || j>=n || (board[i][j]&1)==0) return 0;
        return 1;
    }
}
