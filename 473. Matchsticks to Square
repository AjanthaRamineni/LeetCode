class Solution {
    
    public boolean makesquare(int[] nums) {
        if(nums==null || nums.length==0) return false;
        int sum = 0;
        for(int num:nums) {
            sum+=num;
        }
        if(sum%4!=0) return false;
        return helper(nums, 0, sum/4, 0, 4, new boolean[nums.length]);
    }
    
    public boolean helper(int[] nums, int index, int target, int cursum, int k, boolean[] visited) {
        if(k==1) return true;
        if(cursum==target) {
            return helper(nums, 0, target, 0, k-1, visited);
        }
        for(int i=index;i<nums.length;i++) {
            if((visited[i])||(nums[i]+cursum>target)) continue;
            visited[i] = true;
            cursum+=nums[i];
            if(helper(nums, i+1, target, cursum, k, visited)) return true;
            cursum-=nums[i];
            visited[i] = false;
        }
        return false;
    }
    
}
