class Solution {
    
    //O(n) time and space
    public String reverseVowels(String s) {
        if(s==null || s.length()==0) return s;
        char[] ch = s.toCharArray();
        int n = s.length();
        int low = 0, high = n-1;
        while(low<high){
            while((low<high)&&(!isVowel(s.charAt(low)))) low++;
            while((low<high)&&(!isVowel(s.charAt(high)))) high--;
            if(low<high){
                char temp = ch[low];
                ch[low] = ch[high];
                ch[high] = temp;
                low++;
                high--;
            }
        }
        return new String(ch);
    }
    
    //O(1) time and space
    public boolean isVowel(char c){
        return ((c=='a')||(c=='e')||(c=='i')||(c=='o')||(c=='u')||(c=='A')||(c=='E')||(c=='I')||(c=='O')||(c=='U'));
    }
}
