//O(n) time and O(1) space
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null || head.next==null || k<2) return head;
        ListNode dummy = new ListNode(0);
        ListNode iter = dummy;
        iter.next = head;
        while(iter!=null && iter.next!=null) {
            ListNode slow = iter.next, fast = iter.next;
            for(int i=1;i<k;i++) {
                fast = fast.next;
                if(fast==null) return dummy.next;
            }
            ListNode next = fast.next;
            fast.next = null;
            reverse(slow);
            iter.next = fast;
            slow.next = next;
            iter = slow;
        }
        return dummy.next;
    }
    
    public ListNode reverse(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode prev = null, cur = head;
        while(cur!=null) {
            ListNode next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }
    
}
