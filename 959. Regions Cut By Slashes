//O(mn) time and space
class Solution {
    public int regionsBySlashes(String[] grid) {
        if(grid==null || grid.length==0 || grid[0].length()==0) return 0;
        int m = grid.length, n = grid[0].length();
        boolean[][] map = new boolean[3*m][3*n];
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                char c = grid[i].charAt(j);
                if(c=='/') map[3*i+2][3*j] = map[3*i+1][3*j+1] = map[3*i][3*j+2] = true;
                if(c=='\\') map[3*i][3*j] = map[3*i+1][3*j+1] = map[3*i+2][3*j+2] = true;
            }
        }
        int res = 0;
        for(int i=0;i<3*m;i++) {
            for(int j=0;j<3*n;j++) {
                if(!map[i][j]) {
                    res++;
                    dfs(map,i,j,3*m,3*n);
                }
            }
        }
        return res;
    }
    
    public void dfs(boolean[][] map, int i, int j, int m, int n) {
        if(i<0 || i>=m || j<0 || j>=n || map[i][j]) return;
        map[i][j] = true;
        dfs(map,i+1,j,m,n);
        dfs(map,i-1,j,m,n);
        dfs(map,i,j+1,m,n);
        dfs(map,i,j-1,m,n);
    }
    
}
