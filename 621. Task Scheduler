//O(n) time and O(1) space
class Solution {
    public int leastInterval(char[] tasks, int n) {
        int[] freq = new int[26];
        for(char t:tasks) {
            freq[t-'A']++;
        }
        Arrays.sort(freq);
        int max_frequency = freq[25];
        int idle_slots = n*(max_frequency-1);
        for(int i=24;i>=0;i--){
            if(freq[i]==0) break;
            idle_slots-=Math.min(freq[i], max_frequency-1);
        }
        return (idle_slots>0)?tasks.length+idle_slots:tasks.length;
    }
}
