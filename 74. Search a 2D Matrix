//O(log(m*n)) time and O(1) space
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        //Sanity Check
        if(matrix==null || matrix.length==0) return false;
        return binarySearch(matrix, target);
    }
    
    public boolean binarySearch(int[][] matrix, int target){
        int m = matrix.length;
        int n = matrix[0].length;
        int low = 0, high = m*n-1;
        while(low<=high){
            int mid = low + (high-low)/2;
            int cur = matrix[mid/n][mid%n];
            if(cur==target) return true;
            else if(cur>target) high = mid-1;
            else low = mid+1;
        }
        return false;
    }
}
