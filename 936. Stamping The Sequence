//O(mn) time and O(m+n) space
class Solution {
    public int[] movesToStamp(String stamp, String target) {
        char[] S = stamp.toCharArray();
        char[] T = target.toCharArray();
        List<Integer> result = new ArrayList();
        boolean[] visited = new boolean[T.length];
        int stars = 0;
        while(stars<T.length) {
            boolean flag = false;
            for(int i=0;i<=T.length-S.length;i++) {
                if(!visited[i] && canReplace(S, T, i)) {
                    stars += doReplace(S, T, i);
                    flag = true;
                    result.add(i);
                    visited[i] = true;
                    if(stars==T.length) {
                        break;
                    }
                }
            }
            if(!flag) return new int[0];
        }
        Collections.reverse(result);
        int[] array = new int[result.size()];
        for(int i=0;i<array.length;i++) {
            array[i] = result.get(i);
        }
        return array;
    }
    
    public boolean canReplace(char[] S, char[] T, int index) {
        for(int i=0;i<S.length;i++) {
            if(T[i+index]=='*' || T[i+index]==S[i]) continue;
            return false;
        }
        return true;
    }
    
    public int doReplace(char[] S, char[] T, int index) {
        int count = 0;
        for(int i=0;i<S.length;i++) {
            if(T[i+index]=='*') continue;
            count++;
            T[i+index] = '*';
        }
        return count;
    }
}
