//O(n^2) time and O(n) space
class Solution {
    public int minAreaRect(int[][] points) {
        if(points==null || points.length<4) return 0;
        int n = points.length, min = Integer.MAX_VALUE;
        Set<String> set = new HashSet();
        for(int i=0;i<n;i++) {
            set.add(points[i][0]+","+points[i][1]);
        }
        for(int i=0;i<n;i++) {
            for(int j=i+1;j<n;j++) {
                if((points[i][0]==points[j][0])||(points[i][1]==points[j][1])) continue;
                String B = points[i][0]+","+points[j][1];
                String D = points[j][0]+","+points[i][1];
                if(set.contains(B) && set.contains(D)) {
                    min = Math.min(min, area(points[i], points[j]));
                }
            }
        }
        return (min==Integer.MAX_VALUE)?0:min;
    }
    
    public int area(int[] A, int[] B) {
        return Math.abs(A[0]-B[0])*Math.abs(A[1]-B[1]);
    }
    
}
