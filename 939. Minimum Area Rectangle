//O(n^2) time and O(n) space
class Solution {
    public int minAreaRect(int[][] points) {
        if(points==null || points.length<2) return 0;
        Map<Integer, Set<Integer>> map = new HashMap();
        int n = points.length;
        for(int[] p:points){
            map.putIfAbsent(p[0], new HashSet());
            map.get(p[0]).add(p[1]);
        }
        int min = Integer.MAX_VALUE;
        for(int[] p1:points) {
            for(int[] p2:points) {
                if((p1[0]==p2[0])||(p1[1]==p2[1])) continue;
                if((map.get(p1[0]).contains(p2[1])) && (map.get(p2[0]).contains(p1[1]))) {
                    min = Math.min(min, Math.abs(p1[0]-p2[0])*Math.abs(p1[1]-p2[1]));
                }
            }
        }
        return min==Integer.MAX_VALUE?0:min;
    }
}
