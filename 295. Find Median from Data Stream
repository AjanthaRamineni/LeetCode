class MedianFinder {
    PriorityQueue<Integer> minheap;
    PriorityQueue<Integer> maxheap;
    public MedianFinder() {
        minheap = new PriorityQueue();
        maxheap = new PriorityQueue<Integer>((a,b)->(b-a));
    }
    
    //O(logn) time and O(n) space
    public void addNum(int num) {
        maxheap.add(num);
        minheap.add(maxheap.poll());
        if(minheap.size()-1>maxheap.size()){
            maxheap.add(minheap.poll());
        }
    }
    
    //O(1) time and O(n) space
    public double findMedian() {
        if(minheap.size()==maxheap.size()){
            return (maxheap.peek()+minheap.peek())/2.0;
        }
        return minheap.peek();
    }
}
