/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<String>> printTree(TreeNode root) {
        int height = height(root);
        String[][] result = new String[height][(1<<height)-1];
        for(String[] r:result){
            Arrays.fill(r,"");
        }
        helper(root, result, 0, 0, ((1<<height)-1));
        return list(result);
    }
    
    public void helper(TreeNode node, String[][] result, int r, int l, int h) {
        if((l>h)||(node==null)) return;
        int mid = (l+h)/2;
        result[r][mid] = node.val+"";
        helper(node.left, result, r+1, l, mid);
        helper(node.right, result, r+1, mid+1, h);
    }
    
    public List<List<String>> list(String[][] result){
        List<List<String>> list = new ArrayList();
        for(String[] r:result){
            list.add(Arrays.asList(r));
        }
        return list;
    }
    
    public int height(TreeNode node){
        if(node==null) return 0;
        return 1 + Math.max(height(node.left), height(node.right));
    }
}
