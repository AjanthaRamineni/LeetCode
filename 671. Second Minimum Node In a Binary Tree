//O(n) time and space
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        Set<Integer> set = new HashSet();
        dfs(root, set);
        Integer m1 = null, m2 = null;
        for(Integer s:set) {
            if(m1!=null && m1==s || m2!=null && m2==s) continue;
            if(m1==null || m1>s) {
                m2 = m1;
                m1 = s;
            }
            else if(m2==null || m2>s) {
                m2 = s;
            }
        }
        return (m2==null) ? -1 : m2;
    }
    
    public void dfs(TreeNode root, Set<Integer> set) {
        if(root==null) return;
        set.add(root.val);
        dfs(root.left, set);
        dfs(root.right, set);
    }
    
}
