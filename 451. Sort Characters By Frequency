//O(n) time and space
class Solution {
    public String frequencySort(String s) {
        int n = s.length();
        Map<Character, Integer> map = new HashMap();
        for(char c:s.toCharArray()){
            map.put(c, map.getOrDefault(c,0)+1);
        }
        List<Character>[] buckets = new List[n+1];
        for(char key:map.keySet()){
            int value = map.get(key);
            if(buckets[value]==null)
                buckets[value] = new ArrayList();
            buckets[value].add(key);    
        }
        StringBuilder sb = new StringBuilder();
        for(int i=buckets.length-1;i>=0;i--){
            if(buckets[i]!=null){
                for(char c:buckets[i]){
                    for(int j=0;j<map.get(c);j++)
                    sb.append(c);
                }
            }
        }
        return sb.toString();
    }
}
