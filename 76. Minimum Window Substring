//O(M+N) time and O(N) space
class Solution {
    public String minWindow(String s, String t) {
        if(s==null || t==null || s.length()<t.length()) return "";
        int m = s.length(), n = t.length();
        Map<Character, Integer> map = new HashMap();
        for(char c:t.toCharArray()) {
            map.put(c, map.getOrDefault(c,0)+1);
        }
        int left = 0, count = 0, minLeft = 0, minLength = m+1;
        for(int right=0;right<m;right++) {
            char r = s.charAt(right);
            if(map.containsKey(r)) {
                map.put(r, map.get(r)-1);
                if(map.get(r)>=0) count++;
            }
            while(count==n) {
                if(right+1-left<minLength) {
                    minLength = right+1-left;
                    minLeft = left;
                }
                char l = s.charAt(left++);
                if(map.containsKey(l)) {
                    map.put(l, map.get(l)+1);
                    if(map.get(l)>0) count--;
                }
            }
        }
        return (minLength<=m)?s.substring(minLeft,minLeft+minLength):"";
    }
}
