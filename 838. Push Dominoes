//O(n) time and space
class Solution {
    public String pushDominoes(String dominoes) {
        if(dominoes==null || dominoes.length()==0) return "";
        int n = dominoes.length();
        StringBuffer sb = new StringBuffer();
        int[] forces = new int[n];
        int force = 0;
        for(int i=0;i<n;i++) {
            char c = dominoes.charAt(i);
            if(c=='L') force = 0;
            else if(c=='R') force = n;
            else {
                force = Math.max(force-1, 0);
            }
            forces[i]+=force;
        }
        for(int i=n-1;i>=0;i--) {
            char c = dominoes.charAt(i);
            if(c=='L') force = n;
            else if(c=='R') force = 0;
            else {
                force = Math.max(force-1, 0);
            }
            forces[i]-=force;
        }
        for(int f:forces) {
            if(f>0) sb.append("R");
            else if(f<0) sb.append("L");
            else sb.append(".");
        }
        return sb.toString();
    }
}
