class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> list = new ArrayList();
        Arrays.sort(candidates);
        helper(list, new ArrayList<>(), candidates, target,0);
        return list;
    }
    public void helper(List<List<Integer>> list, List<Integer> sublist, int[] candidates, int target, int start){ 
        if(target<0) return;
        else if(target==0){
            list.add(new ArrayList<>(sublist));
        }
        else{
            for(int i=start;i<candidates.length;i++){
                sublist.add(candidates[i]);
                helper(list, sublist, candidates, target-candidates[i],i);
                sublist.remove(sublist.size()-1);
            }
        }
    }   
}
